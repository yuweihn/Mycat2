metadata: #读写分离无需配置
interceptors:
  [{user:{username: 'root' ,password: '123456' , ip: '.'},
    defaultHanlder: {command: execute , tags: {targets: repli,needTransaction: true}},
     #配置无需处理的sql去往的服务器,一般为主服务器,forceProxy的意思是强制使用mycat自研的协议实现发送sql,该实现实际上不区分executeType,而jdbc的实现query和update要区分
     #executeType默认值,不配置情况下为QUERY_MASTER
    schemas: [{
                tables:[ 'db1.company','db1.travelrecord'],
                sqls: [
                {sql: 'select {any}',command: execute ,tags: {targets: repli,executeType: QUERY ,needTransaction: true}}
                ],
              },
    ],
    sqls:[] ,
    sqlsGroup: [*jdbcAdapter],
    transactionType: proxy  #xa.proxy
   }]
datasource:
  datasources: [{name: defaultDs, ip: 0.0.0.0,port: 3306,user: root,password: 123456,maxCon: 10000,minCon: 0,
                 maxRetryCount: 3, #连接重试次数
                 maxConnectTimeout: 10000, #连接超时时间 毫秒
                 dbType: mysql, #
                 initSqls: ['use db1'],
                 weight: 1, #负载均衡权重
                 instanceType:,#READ,WRITE,READ_WRITE ,集群信息中是主节点,则默认为读写,副本则为读,此属性可以强制指定可写,
                },
                {name: defaultDs2, ip: 0.0.0.0,port: 3307,user: root,password: 123456,maxCon: 10000,
                 initSqls: ['use db1'],
                 minCon: 0,maxRetryCount: 3,maxConnectTimeout: 10000,dbType: mysql,weight: 1,instanceType:,#READ,WRITE,READ_WRITE
                }
  ]
  timer: {initialDelay: 10, period: 5, timeUnit: SECONDS}
cluster: #集群,数据源选择器,既可以mycat自行检查数据源可用也可以通过mycat提供的外部接口设置设置数据源可用信息影响如何使用数据源
  close: true  #关闭集群心跳,此时集群认为所有数据源都是可用的,可以通过mycat提供的外部接口设置数据源可用信息达到相同效果
  clusters: [
  {name: repli ,
   replicaType: MASTER_SLAVE , # SINGLE_NODE:单一节点 ,MASTER_SLAVE:普通主从 GARELA_CLUSTER:garela cluster
   switchType: SWITCH , #NOT_SWITCH:不进行主从切换,SWITCH:进行主从切换
   readBalanceType: BALANCE_ALL  , #对于查询请求的负载均衡类型
   readBalanceName: BalanceRoundRobin , #对于查询请求的负载均衡类型
   writeBalanceName: BalanceRoundRobin ,  #对于修改请求的负载均衡类型
   masters:[defaultDs , defaultDs2], #主节点列表,普通主从,当主失去连接后,依次选择列表中存活的作为主节点
   replicas:[ defaultDs2],#从节点列表
   maxCon:, #集群最占用大连接限制
   heartbeat:{maxRetry: 3, #心跳重试次数
              minSwitchTimeInterval: 120000 , #最小主从切换间隔
              heartbeatTimeout: 100000 , #心跳超时值,毫秒
              slaveThreshold: 0 , # mysql binlog延迟值
              reuqestType: 'mysql' #进行心跳的方式,mysql或者jdbc两种
   }}
  ]
  timer: {initialDelay: 0, period: 1, timeUnit: SECONDS} #心跳定时器 initialDelay一般为0,mycat会在开启集群心跳,一个initialDelay+1秒之后开启服务器端口
server:
  ip: 0.0.0.0
  port: 8066
  reactorNumber: 1
  #用于多线程任务的线程池,
  worker: {close: true, #禁用多线程池,jdbc等功能将不能使用
           maxPengdingLimit: 65535, #每个线程处理任务队列的最大长度
           maxThread: 1,
           minThread: 1,
           timeUnit: SECONDS,
           waitTaskTimeout: 5 #超时后将结束闲置的线程
  }
#负载均衡类型 BALANCE_ALL:所有数据源参与负载均衡 BALANCE_ALL_READ:所以非master数据源参与负载均衡 BALANCE_NONE:只有master(一个)参与负载
plug:
  loadBalance:
    defaultLoadBalance: balanceRandom
    loadBalances: [
    {name: BalanceRunOnMaster, clazz: io.mycat.plug.loadBalance.BalanceRunOnMaster},
    {name: BalanceLeastActive, clazz: io.mycat.plug.loadBalance.BalanceLeastActive},
    {name: BalanceRoundRobin, clazz: io.mycat.plug.loadBalance.BalanceRoundRobin},
    {name: BalanceRunOnReplica, clazz: io.mycat.plug.loadBalance.BalanceRunOnReplica},
    {name: BalanceRunOnRandomMaster, clazz: io.mycat.plug.loadBalance.BalanceRunOnRandomMaster}
    ]
#lib start
sqlGroups:
  jdbcAdapter:
    sqls: &jdbcAdapter [
    {name: explain,sql: 'EXPLAIN {statement}' ,command: explainSQL},
    {name: hbt,sql: 'execute plan {hbt}' , explain: '{hbt}' ,command: executePlan},#执行hbt
    {name: explainHbt,sql: 'explainPlan {hbt}' , explain: '{hbt}' ,command: explainPlan},#解释hbt
    {name: commit,sql: 'commit',command: commit},
    {name: begin; ,sql: 'begin',command: begin},
    {name: rollback ,sql: 'rollback',command: rollback},
    {name: useStatement ,sql: 'use {schema}',command: useStatement},
    {name: setXA ,sql: 'set xa = on',command: onXA},
    {name: setProxy ,sql: 'set xa = off',command: offXA},
    {name: setAutoCommitOff ,sql: 'set autocommit=off',command: setAutoCommitOff},
    {name: start transaction ,sql: ' START TRANSACTION ',command: begin},
    {name: setAutoCommitOn ,sql: 'set autocommit=on',command: setAutoCommitOn},
    {name: setTransactionIsolation ,sql: 'SET SESSION TRANSACTION ISOLATION LEVEL {transactionIsolation}',command: setTransactionIsolation},
    {name: mariadb-setAutoCommitOn,sql: 'set autocommit=1',command: setAutoCommitOn},
    {name: mariadb-variables,sql: 'SELECT @@max_allowed_packet,@@system_time_zone,@@time_zone,@@auto_increment_increment',command: execute , tags: {targets: defaultDs}},
    {name: mariadb-setAutoCommitOff,sql: 'set autocommit=0',command: setAutoCommitOff },
    {  name: mysql-variables,
       sql: 'SELECT  @@session.auto_increment_increment AS auto_increment_increment, @@character_set_client AS character_set_client, @@character_set_connection AS character_set_connection, @@character_set_results AS character_set_results, @@character_set_server AS character_set_server, @@collation_server AS collation_server, @@init_connect AS init_connect, @@interactive_timeout AS interactive_timeout, @@license AS license, @@lower_case_table_names AS lower_case_table_names, @@max_allowed_packet AS max_allowed_packet, @@net_write_timeout AS net_write_timeout, @@sql_mode AS sql_mode, @@system_time_zone AS system_time_zone, @@time_zone AS time_zone, @@transaction_isolation AS transaction_isolation, @@wait_timeout AS wait_timeout',
       explain: 'SELECT @@session.auto_increment_increment AS auto_increment_increment, @@character_set_client AS character_set_client, @@character_set_connection AS character_set_connection, @@character_set_results AS character_set_results, @@character_set_server AS character_set_server, @@collation_server AS collation_server, @@init_connect AS init_connect, @@interactive_timeout AS interactive_timeout, @@license AS license, @@lower_case_table_names AS lower_case_table_names, @@max_allowed_packet AS max_allowed_packet, @@net_write_timeout AS net_write_timeout, @@sql_mode AS sql_mode, @@system_time_zone AS system_time_zone, @@time_zone AS time_zone, @@tx_isolation AS transaction_isolation, @@wait_timeout AS wait_timeout'
      ,command: execute , tags: {targets: defaultDs,forceProxy: true}},
    {name: 'mysql SELECT @@session.transaction_read_only',sql: 'SELECT @@session.transaction_read_only',command: selectTransactionReadOnly , tags: {columnName: '@@session.transaction_read_only'}},
    {name: 'mysql SELECT @@session.tx_read_only',sql: 'SELECT @@session.tx_read_only',command: selectTransactionReadOnly , tags: {columnName: '@@session.tx_read_only'}},
    {name: 'mysql SELECT @@session.autocommit', sql: 'SELECT @@session.autocommit',command: selectAutocommit},
    {name: 'mysql SELECT  LAST_INSERT_ID()', sql: 'SELECT  LAST_INSERT_ID()',command: selectLastInsertId },
    {name: 'mysql set names', sql: 'set names {any}',command: ok },
    {name: 'mysql set character_set_results', sql: 'set character_set_results {any}',command: ok },
    {name: 'mysql set GLOBAL TRANSACTION', sql: 'set GLOBAL TRANSACTION {any}',command: ok },
    {name: 'mysql set session transaction', sql: 'set session transaction READ ONLY',command: ok },
    {name: 'mysql SET SQL_SELECT_LIMIT', sql: 'SET SQL_SELECT_LIMIT {any}',command: ok },
    {name: 'mysql SET net_write_timeout', sql: 'SET net_write_timeout {any}',command: ok },
    {name: 'mycat SELECT next_value_for', sql: 'SELECT next_value_for{xxx}',command: distributedQuery },
    ]
#lib end




